// Algorithms_Homework

// Level 1
// Task 'a': 

// Задачи, которые по моему мнению требуют амортизированный анализ в разработке:

// Динамический массив требует использования амортизированного анализа. Если в алгоритме прописано, что при заполнении массива,
// массив увеличивается в два раза, то промежуточные действия по добавлению в массив, являются дешевыми операциями,
// которые и будут компенсировать затраты на использование более дорогой операции при увеличении массива.
// Тем самым, данный анализ усредняет все операции, дорогие и дешевые. 

// ! Амортизированный анализ всегда применяется для алгоритмов, которые запускаются много раз.


// Task 'b'.

function growUpArray(array, number) {
    let result = [];
    result.length = (array.length + number);
    for (let i = 0; i < array.length; i++) {
        result[i] = array[i];
    }
    return result;
};
