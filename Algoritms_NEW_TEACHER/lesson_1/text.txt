1) Алгоритм означает набор правил, которым необходимо следовать при
вычислениях или других операциях по решению задач.

Алгоритм относится к последовательности конечных шагов для решения
конкретной проблемы.

Алгоритмы могут быть простыми и сложными в зависимости от того, чего
вы хотите достичь. 

Алгоритмизация – процесс разработки алгоритма для решения какой-либо
задачи

2) Характеристики алгоритма
- Ясный и недвусмысленный: каждый его шаг должен быть ясен во всех аспектах и должен
вести только к одному смыслу.

- Четко определенные входные данные: если алгоритм говорит принимать входные
данные, это должны быть четко определенные входные данные.

- Четко определенные результаты: Алгоритм должен четко определять, какой результат
будет получен, и он также должен быть четко определен.

- Конечность: Алгоритм должен быть конечным, т.е. он должен завершаться через конечное
время.

- Выполнимый: алгоритм должен быть простым, универсальным и практичным, чтобы его
можно было выполнить с доступными ресурсами.

- Независимый от языка: разработанный алгоритм должен быть независимым от языка, т.е.
это должны быть простые инструкции, которые могут быть реализованы на любом языке, и
при этом вывод будет таким же, как и ожидалось.

3) Свойства алгоритма
- Алгоритм должен завершиться через конечное время.

- Алгоритм должен производить хотя бы один вывод.

- Алгоритм должен принимать ноль или более входных
данных.

- Алгоритм должен давать один и тот же результат для
одного и того же входного случая.

- Каждый шаг в алгоритме должен быть эффективным 


4) Типы алгоритмов
1. Алгоритм грубой силы (работает в лоб с данными)
2. Рекурсивный алгоритм (основанные на повторение, вызов самого себя)
3. Алгоритм поиска с возвратом (ищут решения, возвращают результат)
4. Алгоритм поиска (поиск элемента в массиве) 
5. Алгоритм сортировки (массив, который надо отсортировать) 
6. Алгоритм хеширования (в работе с базами данных, )
7. Алгоритм «разделяй и властвуй» (своей логикой делят задачи на подзадачи, доходим до оптимального
   Получаем оторванную от контекста задачу)
8. Жадный алгоритм (которые на каждом шаге выполнения стараются найти оптимальное. В массиве выбирают большее число)
9. Алгоритм динамического программирования ()
10. Рандомизированный алгоритм ( не будем проходить)
Также есть алгоритмы, для динамических массивов . Амортизационные.


ПСЕВДОКОД. 

5) эффективность алгоритма измеряются путем подсчета времени и памяти.
Время - Time complexity
Память - Space complexity 

6) Структура данных — это математическая или логическая модель организации данных. Короче говоря, структура
данных — это способ организации данных в форме, доступной для компьютеров. Он позволяет обрабатывать
большие объемы данных за относительно короткий промежуток времени. Основная цель использования структур
данных — сократить временные и пространственные сложности. Эффективная структура данных использует
минимум памяти и требует минимально возможного времени для выполнения.

7) Линейный поиск. Line search

{3, 6, 4, 7, 2, 1, 9}

8) Big(O)
 